<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sports.persistance.mapper.UserMapper">
	<select id="getIdCheck" parameterType="UserDTO" resultType="int">
		SELECT COUNT(*) FROM USER_INFO WHERE USER_ID = #{user_id}
	</select>
	<insert id="insertUserInfo" parameterType="UserDTO">
		INSERT INTO USER_INFO (
			USER_ID,
			USER_NAME,
			PASSWORD,
			EMAIL,
			TEL,
			ADDRESS1,
			ADDRESS2,
			AUTH,
			EMAIL_CK,
			REG_USER_NO,
			REG_DT
		) VALUES (
			#{user_id},
			#{user_name},
			PASSWORD(#{password}),
			#{email},
			#{tel},
			#{address1},
			#{address2},
			'U',
			'N',
			last_insert_id(),
			now()
		)
	</insert>
	
	<update id="updateRegUser" parameterType="UserDTO">
		UPDATE USER_INFO SET REG_USER_NO =
		(SELECT * FROM (SELECT USER_NO FROM USER_INFO WHERE USER_ID=#{user_id}) AS s) WHERE USER_ID = #{user_id}
	</update>
	
	<select id="getLoginInfo" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_NO, USER_ID, USER_NAME, EMAIL_CK FROM USER_INFO WHERE USER_ID=#{user_id} AND PASSWORD = PASSWORD(#{password})
	</select>
	
	<update id="updateEmailCode" parameterType="UserDTO">
		UPDATE USER_INFO SET EMAIL_CODE = #{email_code} WHERE USER_NAME = #{user_name} AND EMAIL = #{email}
	</update>
	
	<select id="getUserId" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_NO, USER_ID, USER_NAME, EMAIL , EMAIL_CODE FROM USER_INFO WHERE USER_NAME = #{user_name} AND EMAIL = #{email} AND EMAIL_CODE = #{email_code} 
	</select>
	
	<update id="updatePassword" parameterType="UserDTO">
		UPDATE USER_INFO SET PASSWORD = PASSWORD(#{password}) WHERE USER_NO = #{user_no}
	</update>
	
	<update id="updateEmailCheck" parameterType="UserDTO">
		UPDATE USER_INFO SET EMAIL_CK = 'Y' WHERE USER_NO = #{user_no} AND EMAIL_CODE = #{email_code}
	</update>
	
	<select id="getUserList" resultType="UserDTO">
		SELECT USER_NO, USER_ID, USER_NAME, IF(AUTH='A','운영자','유저') AS AUTH FROM USER_INFO ORDER BY USER_NO DESC
	</select>
	
	<select id="getSearchName" resultType="UserDTO" parameterType="UserDTO">
		SELECT USER_NO, USER_ID, USER_NAME, IF(AUTH='A','운영자','유저') AS AUTH FROM USER_INFO 
		WHERE USER_NAME = #{value}
		ORDER BY USER_NO DESC
	</select>
	
	<select id="getSearchId" resultType="UserDTO" parameterType="UserDTO">
		SELECT USER_NO, USER_ID, USER_NAME, IF(AUTH='A','운영자','유저') AS AUTH FROM USER_INFO 
		WHERE USER_ID = #{value}
		ORDER BY USER_NO DESC
	</select>
	
	<select id="getUserDetail" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_NO, USER_ID, USER_NAME, EMAIL,TEL, ADDRESS1, ADDRESS2, IF(AUTH='A','운영자','유저') AS AUTH, REG_DT FROM USER_INFO WHERE USER_NO = #{user_no}
	</select>
</mapper>